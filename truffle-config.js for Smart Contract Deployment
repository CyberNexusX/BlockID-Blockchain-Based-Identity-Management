/**
 * Truffle configuration file for Ethereum smart contract deployment
 */
require('dotenv').config();
const HDWalletProvider = require('@truffle/hdwallet-provider');

// Use environment variables for sensitive information
const MNEMONIC = process.env.MNEMONIC || "";
const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID || "";

module.exports = {
  networks: {
    // For local development using Ganache
    development: {
      host: "127.0.0.1",
      port: 7545,
      network_id: "*" // Match any network id
    },
    
    // Ethereum test networks
    ropsten: {
      provider: () => new HDWalletProvider(
        MNEMONIC,
        `https://ropsten.infura.io/v3/${INFURA_PROJECT_ID}`
      ),
      network_id: 3,
      gas: 5500000,
      confirmations: 2,
      timeoutBlocks: 200,
      skipDryRun: true
    },
    
    rinkeby: {
      provider: () => new HDWalletProvider(
        MNEMONIC,
        `https://rinkeby.infura.io/v3/${INFURA_PROJECT_ID}`
      ),
      network_id: 4,
      gas: 5500000,
      confirmations: 2,
      timeoutBlocks: 200,
      skipDryRun: true
    },
    
    // Ethereum main network
    mainnet: {
      provider: () => new HDWalletProvider(
        MNEMONIC,
        `https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`
      ),
      network_id: 1,
      gas: 5500000,
      gasPrice: 120000000000, // 120 gwei
      confirmations: 2,
      timeoutBlocks: 200,
      skipDryRun: false
    }
  },
  
  // Configure your compilers
  compilers: {
    solc: {
      version: "0.8.9",
      settings: {
        optimizer: {
          enabled: true,
          runs: 200
        }
      }
    }
  },
  
  // Plugins for additional functionality
  plugins: [
    'truffle-plugin-verify'
  ],
  
  // Configure plugin settings
  api_keys: {
    etherscan: process.env.ETHERSCAN_API_KEY
  }
};
